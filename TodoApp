<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>TODO List</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #1e1e2f;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: start;
      min-height: 100vh;
      color: #fff;
    }

    #container {
      background-color: #2d2d44;
      padding: 30px;
      margin-top: 50px;
      border-radius: 12px;
      width: 90%;
      max-width: 500px;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
      text-align: center;
    }

    h1 {
      margin-bottom: 10px;
      color: #00f7ff;
    }

    #inputbox {
      display: flex;
      justify-content: space-between;
      gap: 10px;
      margin-top: 20px;
    }

    #input {
      flex: 1;
      padding: 10px;
      border-radius: 6px;
      border: none;
      font-size: 16px;
    }

    #addBtn {
      padding: 10px 20px;
      border: none;
      border-radius: 6px;
      background-color: #00f7ff;
      color: #000;
      font-weight: bold;
      cursor: pointer;
      transition: background 0.3s;
    }

    #addBtn:hover {
      background-color: #00c2cc;
    }

    ul {
      padding: 0;
      margin-top: 25px;
      text-align: left;
    }

    li {
      list-style: none;
      background-color: #3d3d5c;
      margin-bottom: 10px;
      padding: 12px 15px;
      border-radius: 8px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .buttons {
      display: flex;
      gap: 8px;
    }

    .task-btn {
      padding: 6px 10px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-size: 14px;
      font-weight: bold;
      transition: background 0.3s;
    }

    .edit-btn {
      background-color: #ffd500;
      color: #000;
    }

    .edit-btn:hover {
      background-color: #e6be00;
    }

    .delete-btn {
      background-color: #ff4e4e;
      color: white;
    }

    .delete-btn:hover {
      background-color: #d94444;
    }

    #clearBtn {
      margin-top: 20px;
      padding: 10px 20px;
      border: none;
      border-radius: 6px;
      background-color: #ff4e4e;
      color: white;
      font-weight: bold;
      cursor: pointer;
      transition: background 0.3s;
    }

    #clearBtn:hover {
      background-color: #d94444;
    }
  </style>
</head>
<body>
  <div id="container">
    <h1>üìù TODO LIST</h1>
    <hr />
    <div id="inputbox">
      <input type="text" id="input" placeholder="Add a new task..." />
      <button id="addBtn">Add</button>
    </div>
    <ul id="list"></ul>
    <button id="clearBtn">Clear All</button>
  </div>

  <script>
    const addBtn = document.getElementById('addBtn');
    const input = document.getElementById('input');
    const list = document.getElementById('list');
    const clearBtn = document.getElementById('clearBtn');
    const tasks = [];

    addBtn.addEventListener('click', () => {
      const task = input.value.trim();
      if (task) {
        tasks.push(task);
        input.value = '';
        renderList();
      }
    });

    function renderList() {
      list.innerHTML = '';
      tasks.forEach((task, index) => {
        const li = document.createElement('li');
        li.textContent = task;

        const btnGroup = document.createElement('div');
        btnGroup.className = 'buttons';

        const editBtn = document.createElement('button');
        editBtn.textContent = 'Edit';
        editBtn.className = 'task-btn edit-btn';
        editBtn.addEventListener('click', () => {
          const newTask = prompt('Edit task:', task);
          if (newTask !== null && newTask.trim() !== '') {
            tasks[index] = newTask.trim();
            renderList();
          }
        });

        const deleteBtn = document.createElement('button');
        deleteBtn.textContent = 'Delete';
        deleteBtn.className = 'task-btn delete-btn';
        deleteBtn.addEventListener('click', () => {
          tasks.splice(index, 1);
          renderList();
        });

        btnGroup.appendChild(editBtn);
        btnGroup.appendChild(deleteBtn);
        li.appendChild(btnGroup);
        list.appendChild(li);
      });
    }

    clearBtn.addEventListener('click', () => {
      tasks.length = 0;
      renderList();
    });
  </script>
</body>
</html>
